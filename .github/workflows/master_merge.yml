---
name: Master CI Merge Workflows
on:
  workflow_call:

jobs:
  check-label-cut-status:
    runs-on: self-hosted
    env:
      REDIS_HOSTNAME: ${{ vars.REDIS_HOSTNAME }}
      REDIS_PASSOWRD: ${{ secrets.REDIS_PASSWORD }}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Check Label cut status
        run: |
          APP_GROUP=$(yq '.appGroup // "tessell"' convoy.yaml)
          LABEL_CUT_STATUS_KEY="LABEL_CUT_STATUS_FOR_${APP_GROUP}"
          label_cut_status=$(kubectl exec -it redis-master-0 -n convoy -- redis-cli -h ${REDIS_HOSTNAME} -a ${REDIS_PASSOWRD} -n 1 GET ${LABEL_CUT_STATUS_KEY})
          echo ${label_cut_status}
          if [[ "${label_cut_status}" == "IN_PROGRESS" ]]; then
            echo "Label cut is IN_PROGRESS. Exiting the merge workflow. Please retry once label cut is complete."
            exit 1
          fi

      - name: Slack Notification
        uses: act10ns/slack@v2.0.0
        if: failure()
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ secrets.SLACK_DEVOPS_CHANNEL }}

  file-check:
    needs: check-label-cut-status
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_file_check.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit

  runner-check:
    runs-on: non-build
    needs: file-check
    outputs:
      app_group: ${{steps.check_cd.outputs.app_group}}
      cd_command: ${{steps.check_cd.outputs.cd_command}}
      exec_cd: ${{steps.check_cd.outputs.exec_cd_command}}
      label: ${{steps.get-label.outputs.label}}
      type: ${{steps.runner-type.outputs.type}}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Check exec-deployment-script
        id: check_cd
        run: |
          app_group=$(yq '.appGroup' convoy.yaml)
          cd_command=$(yq '.cd.exec // "" | trim' convoy.yaml)
          exec_cd_command="false"

          if [[ -n "${cd_command}" ]]; then
            BRANCHES=$(yq '.cd.branches[]' convoy.yaml)
            for branch in $BRANCHES; do
              if [[ "${{ github.event.pull_request.base.ref }}" == "${branch}" ]]; then
                exec_cd_command="true"
                break
              fi
            done
          fi
          echo "exec_cd_command=$exec_cd_command" >> $GITHUB_OUTPUT
          echo "cd_command=$cd_command" >> $GITHUB_OUTPUT
          echo "app_group=$app_group" >> $GITHUB_OUTPUT

      - name: Get Label
        id: get-label
        shell: bash
        run: |
          if [ -f convoy.yaml ]; then
            if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
              APP_GROUP=$(yq '.appGroup // "tessell"' convoy.yaml)
              if [[ ${APP_GROUP} == none ]]; then
                echo "LABEL=rel-0.0.0" >> $GITHUB_OUTPUT
                exit 0
              fi
              URL="http://${{vars.CONVOY_API_ENDPOINT}}/devops/applications/app-groups/$APP_GROUP/latest-main-release-label"
              RESPONSE=$(curl -f --location "$URL" --header "x-api-key: ${{secrets.CONVOY_AUTH_TOKEN}}")
              echo "$RESPONSE"
              LABEL=$(echo "$RESPONSE" | jq -r '.["latest-main-release-label"]')
              echo "$LABEL"
              if [[ $LABEL == rel-* ]]; then
                  echo "LABEL=$LABEL" >> $GITHUB_OUTPUT
              else
                  echo "Response: $LABEL"
                  echo "Label does not start with 'rel'. Check response."
                  exit 1 
              fi
            else
              echo "LABEL=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
            fi
           else
            echo "convoy.yaml not found"
           fi

      - name: Determine runner type from Convoy
        id: runner-type
        run: |
          runner=$(yq '.runner' convoy.yaml)
          echo "type=$runner" >> $GITHUB_OUTPUT

  create-tag:
    needs: runner-check
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_create_tag.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      label: ${{needs.runner-check.outputs.label}}

  post-tag-to-convoy:
    needs: create-tag
    if: needs.runner-check.outputs.app_group != 'none'
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_post_tag_convoy.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      tag: ${{needs.create-tag.outputs.tag}}
      uses_custom_version: ${{needs.create-tag.outputs.uses_custom_version}}

  build:
    needs: [runner-check, create-tag]
    # if: needs.file-check.outputs.github-changes == 'false'
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_build_merge.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      type: ${{needs.runner-check.outputs.type}}
      tag: ${{needs.create-tag.outputs.tag}}
      label: ${{needs.runner-check.outputs.label}}

  post-build-to-convoy:
    if: needs.runner-check.outputs.app_group != 'none' && always()
    needs: [file-check, create-tag, build, runner-check, post-tag-to-convoy]
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_post_build_convoy.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      # IS_ANY_ARTIFACT_GENERATED: ${{ needs.file-check.outputs.github-changes == 'false' }}
      IS_ANY_ARTIFACT_GENERATED: "true"
      ARTIFACT_CHECKSUMS: ${{needs.build.outputs.ARTIFACT_CHECKSUMS}}
      TAG: ${{needs.create-tag.outputs.tag}}
      LABEL: ${{needs.runner-check.outputs.label}}
      GENERATED_ARTIFACTS: ${{needs.build.outputs.GENERATED_ARTIFACTS}}
  sonar-scan:
    needs: post-build-to-convoy
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_sonar_scan.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit

  post-coverage-to-convoy:
    needs: [create-tag, build, runner-check]
    if: needs.runner-check.outputs.app_group != 'none'
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_post_coverage_convoy.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      BRANCH_COVERAGE: ${{needs.build.outputs.BRANCH_COVERAGE}}
      LABEL: ${{needs.runner-check.outputs.label}}
      STATEMENT_COVERAGE: ${{needs.build.outputs.STATEMENT_COVERAGE}}
      TAG: ${{needs.create-tag.outputs.tag}}

  create-double-commit:
    if: startsWith(github.event.pull_request.base.ref, 'rel') && always()
    needs: build
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_create_double_commit.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit

  exec-deployment-script:
    if: ${{ needs.runner-check.outputs.exec_cd == 'true' }}
    needs: [runner-check, post-build-to-convoy]
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_deployment.yml@TDEVOPS-3633_convoy_ci_on_3693
    secrets: inherit
    with:
      app_group: ${{needs.runner-check.outputs.app_group}}
      cd_command: ${{needs.runner-check.outputs.cd_command}}

  send-mail:
    needs: create-double-commit
    if: failure() && (contains(github.event.pull_request.head.ref, 'double_commit'))
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_send_email.yml@TDEVOPS-3633_convoy_ci_on_3693 
    secrets: inherit
