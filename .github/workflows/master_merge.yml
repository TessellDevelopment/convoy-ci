---
name: Master CI Merge Workflows
on:
  workflow_call:

jobs:

  file-check:
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_file_check.yml@TDEVOPS-827
    secrets: inherit

  build-file:
    if: needs.file-check.outputs.github-changes == 'false'
    runs-on: amd64
    needs: file-check
    outputs:
      type: ${{steps.build-type.outputs.type}}
      label: ${{steps.get-label.outputs.label}}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CIPIPELINE_NEXUS_PASSWORD  }}
          fetch-depth: 0

      - name: Get branch name
        shell: bash
        run: |
          echo "SOURCE_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
          
      - name: Get Label
        id: get-label
        shell: bash
        run: |
          if [[ "${{env.SOURCE_BRANCH}}" == "main" ]]; then
            TOKEN=$(echo -n '${{secrets.CIPIPELINE_NEXUS_USERNAME}}:${{secrets.CIPIPELINE_NEXUS_PASSWORD}}' | base64 -w 0)
            APP_GROUP=$(yq '.appGroup // "tessell"' convoy.yaml)
            echo "$APP_GROUP"
            URL="http://${{vars.CONVOY_DEV_API_ENDPOINT}}/devops/applications/app-groups/$APP_GROUP/latest-main-release-label"
            echo "$URL"
            RESPONSE=$(curl --location "$URL" \
                    --header "Authorization: Basic $TOKEN")
            echo "$RESPONSE"
            LABEL=$(echo "$RESPONSE" | jq -r '.["latest-main-release-label"]')
            echo "$LABEL"
            if [ $? -eq 0 ]; then
              if [[ $LABEL == rel* ]]; then
                  echo "label=$LABEL" >> $GITHUB_OUTPUT
              else
                  echo "Response: $LABEL"
                  echo "Label does not start with 'rel'. Check response."
                  exit 1 
              fi
            else
                echo "Failed API request."
                exit 1
            fi
          else
            echo "label=${{env.SOURCE_BRANCH}}" >> $GITHUB_OUTPUT
          fi
          
      - name: Determine build type from Convoy
        id: build-type
        run: |
          language=$(yq '.language' convoy.yaml)
          echo "type=$language" >> $GITHUB_OUTPUT
  
  create-tag:
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_create_tag.yml@TDEVOPS-827
    secrets: inherit

  post-tag-to-convoy:
    needs: create-tag
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_post_tag_convoy.yml@TDEVOPS-827
    secrets: inherit
    with:
      tag: ${{needs.create-tag.outputs.tag}}

  find-latest-tag:
    needs: create-tag
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_find_latest_tag.yml@TDEVOPS-827
    secrets: inherit

  build:
    needs: [build-file,find-latest-tag]
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_build_merge.yml@TDEVOPS-827
    secrets: inherit
    with:
      type: ${{needs.build-file.outputs.type}}
      tag: ${{needs.find-latest-tag.outputs.tag}}
      label: ${{needs.build-file.outputs.label}}

  post-build-to-convoy:
    if: ${{needs.file-check.outputs.github-changes == 'false' && always()}}
    needs: build
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_post_build_convoy.yml@TDEVOPS-827
    secrets: inherit

  create-double-commit:
    if: startsWith(github.event.pull_request.base.ref, 'rel')
    needs: build
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_create_double_commit.yml@TDEVOPS-827
    secrets: inherit

  send-mail:
    needs: create-double-commit
    if: failure() && (contains(github.event.pull_request.head.ref, 'double_commit'))
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_send_email.yml@TDEVOPS-827 
    secrets: inherit
