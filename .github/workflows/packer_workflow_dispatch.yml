name: Tessell Packer Wokflow Dispatch

# SOURCE_BRANCH or PR_SOURCE_BRANCH is "Use workflow from" in "Run Workflow". This is the branch which will have new DB engines (so branch which will merge in main). We do not want this workflow to run when SOURCE_BRANCH is main or "rel-*".
# BASE_BRANCH is " Provide branch name or commit id ". This is the branch which we will compare to SOURCE_BRANCH and generate delta. We only want to push to nexus when BASE_BRANCH is main or "rel-*".

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    outputs:
      mail_id_output: ${{ steps.mail_info.outputs.mail_id }}
      mail_subject_output: ${{ steps.mail_info.outputs.mail_subject}}
      mail_body_output: ${{ steps.mail_info.outputs.mail_body }}
    env:
      NEXUS_PULL_REPOS_PY: tessell-py-development
      NEXUS_PUSH_REPOS_PY: tessell-repos-py-development
      NEXUS_PUSH_REPOS_RAW: tessell-repos-raw-component
      NEXUS_PULL_REPOS_RAW: tessell-raw-development
      BASE_BRANCH: ${{ inputs.branchName }}
      DESTINATION_ACCOUNT: ${{ inputs.accountId }}
      # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#using-data-from-the-triggering-workflow
      CUSTOM_TAGS: '{"TESSELL_ENVIRONMENT": "DEVELOPMENT", "GITHUB_USER": "${{ github.triggering_actor }}", "GITHUB_WORKFLOW_RUN_ID": "${{ github.run_id }}", "GITHUB_PR_NUMBER": "${{ github.event.number }}" }'
      NEXUS_PROTOCOL: ${{vars.NEXUS_PROTOCOL_LOCAL}}
      NEXUS_SERVER_ENDPOINT: ${{vars.NEXUS_SERVER_ENDPOINT_LOCAL}}
      CLOUD_BUILD_TYPE: ${{ inputs.cloudType }}
      CURRENT_VERSION_TAG: 0.118.20502
      PACKER_AWS_ACCESS_KEY_ID: ${{ secrets.PACKER_AWS_ACCESS_KEY_ID }}
      PACKER_AWS_SECRET_ACCESS_KEY: ${{ secrets.PACKER_AWS_SECRET_ACCESS_KEY }}
      PACKER_AZURE_CLIENT_ID: ${{ secrets.PACKER_AZURE_CLIENT_ID }}
      PACKER_AZURE_CLIENT_SECRET: ${{ secrets.PACKER_AZURE_CLIENT_SECRET }}
      PACKER_AZURE_TENANT_ID: ${{ secrets.PACKER_AZURE_TENANT_ID }}
      PACKER_AZURE_SUBSCRIPTION_ID: ${{ secrets.PACKER_AZURE_SUBSCRIPTION_ID }}
      NEXUS_ARTIFACT_REPO: tessell-artifacts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: "0"
      - name: Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Get branch name
        shell: bash
        run: | 
          # SOURCE_BRANCH (PR_SOURCE_BRANCH) is "Use workflow from" in "Run Workflow".
          echo "SOURCE_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
          echo $pull_request_number

      - name: Set Label
      # We do not want this workflow to run when SOURCE_BRANCH (PR_SOURCE_BRANCH) is main or "rel-*" or workflowType is "build.".
        if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && inputs.workflowType == 'build' }}
        shell: bash
        run: |
          # If dev specifies BASE_BRANCH as main, that means he wants to use latest release as base for generating delta.
          # get the latest release label from nexus.

          if [[ "${{ env.BASE_BRANCH }}" == "main" ]]; then
            APP_GROUP=$(yq '.appGroup // "tessell"' convoy.yaml)
            echo "$APP_GROUP"
            URL="http://${{vars.CONVOY_API_ENDPOINT}}/devops/applications/app-groups/$APP_GROUP/latest-main-release-label"
            echo "$URL"
            RESPONSE=$(curl -f --location "$URL" --header "x-api-key: ${{secrets.CONVOY_AUTH_TOKEN}}")
            echo "$RESPONSE"
            LABEL=$(echo "$RESPONSE" | jq -r '.["latest-main-release-label"]')
            echo "$LABEL"
            if [[ $LABEL != rel-* ]]; then
                echo "Response: $LABEL"
                echo "Label does not start with 'rel'. Check response."
                exit 1 
            fi
          # if BASE_BRANCH is given by dev and starts with rel, take it as it is. This means the dev wants to generate delta using a particular release as base.
          elif [[  "${{ env.BASE_BRANCH }}" == rel-* ]]; then
            LABEL=${{ env.BASE_BRANCH }}
          else
          # otherwise use the branch the dev has added new artifacts in (generally the source branch of PR)
            LABEL=${{ env.SOURCE_BRANCH }}
          fi
          echo "LABEL=$LABEL" >> $GITHUB_ENV
          
      - name: Get arg for Cloud build type
        shell: bash
        run: |
          echo "CLOUD_BUILD_TYPE_ARG=$(case "$CLOUD_BUILD_TYPE" in aws) echo "--aws";; azure) echo "--azure";; all) :;; esac)" >> $GITHUB_ENV

      - name: visible
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs
        run: |
          echo ${{ env.BASE_BRANCH }}
          echo ${{ env.SOURCE_BRANCH }}
          echo ${{ env.LABEL }}
          echo ${{ env.CUSTOM_TAGS}}
          echo ${{ github.base_ref }}
          echo ${{ github.head_ref }}
          cat ${{ github.event_path}} | jq '.'
          echo ${{ env.AWS_ACCESS_KEY_ID }}
          echo ${{ env.AWS_SECRET_ACCESS_KEY }}
          echo ${{ env.CLOUD_BUILD_TYPE_ARG }}


      - name: Set Pull repository
        if: ${{ startsWith(env.SOURCE_BRANCH,'rel-') || env.SOURCE_BRANCH == 'main' }}
        shell: bash
        run: |
          echo "NEXUS_PULL_REPOS_PY=tessell-py-component" >> $GITHUB_ENV
          echo "NEXUS_PUSH_REPOS_PY=tessell-repos-py-component" >> $GITHUB_ENV

      - name: Create pip conf
        run: |
          # Create pip.conf and copy to /etc;
          # The --extra_index_url option of pip install does not work with username/password
          # Also pip does not have separate option to specify creds.
          echo "[global]" > pip.conf
          echo "index =  ${{env.NEXUS_PROTOCOL}}://${{ secrets.CIPIPELINE_NEXUS_USERNAME }}:${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}@${{env.NEXUS_SERVER_ENDPOINT}}/repository/${{ env.NEXUS_PULL_REPOS_PY }}/simple" >> pip.conf
          echo "index-url = ${{env.NEXUS_PROTOCOL}}://${{ secrets.CIPIPELINE_NEXUS_USERNAME }}:${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}@${{env.NEXUS_SERVER_ENDPOINT}}/repository/${{ env.NEXUS_PULL_REPOS_PY }}/simple" >> pip.conf
          echo "extra-index-url = https://pypi.org/simple" >> pip.conf
          sudo cp pip.conf /etc/pip.conf
        shell: bash

      - name: Check packer software
        run: |
          packer version

      - name: Install dependencies
        run: |
          sudo python3 -m pip uninstall -y packer_framework
          python3 -m pip install --user virtualenv --trusted-host ${{env.NEXUS_SERVER_ENDPOINT}}
          python3 -m venv pkenv
          source pkenv/bin/activate
          python3 -m pip install wheel --trusted-host ${{env.NEXUS_SERVER_ENDPOINT}}
          python3 -m pip install -r ./requirements.txt --trusted-host ${{env.NEXUS_SERVER_ENDPOINT}}
          find /usr/bin /usr/local/bin -name build_all_artifacts
          rm -rf /usr/lib/python3/dist-packages/OpenSSL
          pip3 install pyopenssl
          pip3 install pyopenssl --upgrade
          pip3 install --force-reinstall setuptools==45.2.0
          
      - name: Dry-run artifacts Input-config
        if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && inputs.workflowType == 'dry_run' }}
        run: |
          source pkenv/bin/activate
          build_all_artifacts -r $PWD --dest_branch ${BASE_BRANCH} --src_branch ${{ env.SOURCE_BRANCH }} --dry_run --pipeline_run ${CLOUD_BUILD_TYPE_ARG}

      - name: Build artifacts Input-config
        if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && inputs.workflowType == 'build' }}
        run: |
          source pkenv/bin/activate
          build_all_artifacts -r $PWD --dest_branch ${BASE_BRANCH} --src_branch ${{ env.SOURCE_BRANCH }} --pipeline_run ${CLOUD_BUILD_TYPE_ARG}

      - name: Share built artifacts
        if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && inputs.workflowType == 'build' && env.DESTINATION_ACCOUNT != 'none'}}
        run: |
          # source $(share_aws_artifacts -sec)
          share_aws_artifacts -i $PWD/image_manifest_local.json

      - name: Push to Nexus
      # we do not want to push when the dev starts this workflow from "main" or "rel-*" branches. (the "Use workflow from").
      # and the label which he/she is comparing to should start with "rel-" and workflow type should be "build" (and not dry_run)
        if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && startsWith(env.LABEL ,'rel-') && inputs.workflowType == 'build' }}
        run: |
          curl -v -u ${{secrets.CIPIPELINE_NEXUS_USERNAME}}:${{secrets.CIPIPELINE_NEXUS_PASSWORD}} \
                --upload-file ./common_manifest.json \
                ${NEXUS_PROTOCOL}://${NEXUS_SERVER_ENDPOINT}/repository/${NEXUS_ARTIFACT_REPO}/${{ env.LABEL }}/delta-image-manifest/workflow_dispatch/${{ env.SOURCE_BRANCH }}/delta-image-manifest-${{ github.run_id }}.json
