name: Cherry Pick workflow
on:
  workflow_call:
    inputs: 
      base_repo: 
        description: 'Base repo url to get changes'
        required: true
        type: string
      base_branch: 
        description: 'Base branch to pull from in public repo'
        required: true
        default: master
        type: string
      jira_id:
        description: 'Jira ID for cherry pick'
        required: true
        type: string
      pr_title:
        description: 'PR Title for cherry pick'
        required: true
        type: string

  workflow_dispatch:

jobs:
  cherry_pick:
    runs-on: self-hosted
    env: 
      URL: ${{inputs.base_repo}}
      BASE_BRANCH: ${{inputs.base_branch}}
      REPO: ${{github.repository}}
      JIRA_ID: ${{inputs.jira_id}}
      PR_TITLE: ${{inputs.pr_title}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      
      - name: Find and Cherry Pick changes from base repo
        run: |
          #!/bin/bash
          set -e
          git remote add upstream $URL
          git fetch upstream $BASE_BRANCH
          
          last_common_commit=$(git merge-base HEAD upstream/$BASE_BRANCH)
          echo "Last common commit: $last_common_commit"
          git checkout -b $JIRA_ID
          git cherry-pick $last_common_commit..upstream/$BASE_BRANCH || {
            echo "Cherry-pick encountered conflicts, resolving automatically"
            git status --short | grep 'UU' | awk '{print $2}' | xargs git add
            git commit -m "$PR_TITLE (with conflict resolution)"
          }
      
          git push origin $JIRA_ID
      
          curl -X POST -H "Authorization: token ${{ secrets.CIPIPELINE_GITHUB_TOKEN }}" \
            -d "{\"title\": \"${{ env.PR_TITLE }}\", \"head\": \"${{ env.JIRA_ID }}\", \"base\": \"main\"}" \
            "https://api.github.com/repos/$REPO/pulls"
      
