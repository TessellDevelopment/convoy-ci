---
name: Master CI PR Workflows
on:
  workflow_call:

jobs:
  
  dev-checks:
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_dev_checks.yml@TDEVOPS-827
    secrets: inherit

  version-check:
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_check_version.yml@TDEVOPS-827
    secrets: inherit

  build-file:
    runs-on: amd64
    outputs:
      type: ${{steps.build-type.outputs.type}}
    needs: [dev-checks,version-check]
    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CIPIPELINE_NEXUS_PASSWORD  }}
          fetch-depth: 0

      - name: Determine build type from Convoy
        id: build-type
        run: |
          language=$(yq '.language' convoy.yaml)
          echo "type=$language" >> $GITHUB_OUTPUT

  build:
    needs: build-file
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_build_pr.yml@TDEVOPS-827
    with:
      type: ${{needs.build-file.outputs.type}}
    secrets: inherit

  check-commits:
    if: (contains(github.event.pull_request.head.ref, 'double_commit')) && (github.event.pull_request.user.login == 'cipipelinetessell' )
    needs: build
    runs-on: amd64
    env:
      REPO: ${{github.repository}}
      PR_NUMBER: ${{github.event.number}}
      GITHUB_TOKEN: ${{secrets.CIPIPELINE_NEXUS_PASSWORD}}
    steps:  
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CIPIPELINE_NEXUS_PASSWORD  }}
          fetch-depth: 0

      - name: Check commits
        id: get-pr-commits
        run: |
          PR_COMMITS=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits| jq -r '. | length')
          echo "Number of commits in PR: $PR_COMMITS"
          echo "::set-output name=pr_commits::$PR_COMMITS"

      - name: Check Number of Commits
        run: |
          PR_COMMITS=${{ steps.get-pr-commits.outputs.pr_commits }}
          if [ "$PR_COMMITS" -eq 1 ]; then
            echo "One Commit present in DC. Auto merge."
          else
            echo "More than one commit present in DC, need approval."
            exit 1
          fi
    
  auto-merge:
    needs: check-commits
    if: (contains(github.event.pull_request.head.ref, 'double_commit')) && (github.event.pull_request.user.login == 'cipipelinetessell' )
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_auto_merge.yml@TDEVOPS-827 
    secrets: inherit 

  send-mail:
    needs: auto-merge
    if: failure() && (contains(github.event.pull_request.head.ref, 'double_commit'))
    uses: TessellDevelopment/tessell-ci/.github/workflows/master_send_email.yml@TDEVOPS-827 
    secrets: inherit


# Change every ref to main