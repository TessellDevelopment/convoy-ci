name: Tessell Artifact replication workflow

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: non-build
    outputs:
      mail_id_output: ${{ steps.mail_info.outputs.mail_id }}
      mail_subject_output: ${{ steps.mail_info.outputs.mail_subject}}
      mail_body_output: ${{ steps.mail_info.outputs.mail_body }}
    env:
      NEXUS_PULL_REPOS_PY: tessell-py-development
      NEXUS_PUSH_REPOS_PY: tessell-repos-py-development
      NEXUS_PUSH_REPOS_RAW: tessell-repos-raw-component
      NEXUS_PULL_REPOS_RAW: tessell-raw-development
      BRANCH_NAME: ${{ inputs.branchName }}
      TAGS: '{"build-source": "workflow-dispatch"}'
      AWS_ACCESS_KEY_ID: ${{ secrets.PACKER_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PACKER_AWS_SECRET_ACCESS_KEY }}
      AZURE_CLIENT_ID: ${{ secrets.PACKER_AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.PACKER_AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.PACKER_AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.PACKER_AZURE_SUBSCRIPTION_ID }}
      CLOUD_BUILD_TYPE: ${{ inputs.cloudType }}
      RESOURCE_ID: ${{ inputs.resourceId }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Get branch name
        shell: bash
        run: |
          echo "SOURCE_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
          echo "TARGET_BRANCH=$(echo ${{ github.event.ref }} | tr / -)" >> $GITHUB_ENV

          echo $pull_request_number

      - name: visible
        run: |
          echo ${{ env.SOURCE_BRANCH }}
          echo ${{ env.TARGET_BRANCH }}
          echo ${GITHUB_BASE_REF}
          echo "Source branch is ${{ github.head_ref }}"
          echo $TARGET_BRANCH_MAIN
          echo $BRANCH_NAME
          echo ${{ github.head_ref }}
          cat ${GITHUB_EVENT_PATH} | jq '.'
          echo ${{ env.AWS_ACCESS_KEY_ID }}
          echo ${{ env.AWS_SECRET_ACCESS_KEY }}
          echo ${{ env.RESOURCE_ID }}

      - name: Set Pull repository
        if: ${{ startsWith(env.SOURCE_BRANCH,'rel-') || env.SOURCE_BRANCH == 'main' }}
        shell: bash
        run: |
          echo "NEXUS_PULL_REPOS_PY=tessell-py-component" >> $GITHUB_ENV
          echo "NEXUS_PUSH_REPOS_PY=tessell-repos-py-component" >> $GITHUB_ENV

      # - name: Create pip conf
      #   run: |
      #     # Create pip.conf and copy to /etc;
      #     # The --extra_index_url option of pip install does not work with username/password
      #     # Also pip does not have separate option to specify creds.
      #     echo "[global]" > pip.conf
      #     echo "index =  {{vars.NEXUS_PROTOCOL_LOCAL}}://${{ secrets.CIPIPELINE_NEXUS_USERNAME }}:${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}@${{vars.NEXUS_SERVER_ENDPOINT_LOCAL}}/repository/${{ env.NEXUS_PULL_REPOS_PY }}/simple" >> pip.conf
      #     echo "index-url = {{vars.NEXUS_PROTOCOL_LOCAL}}://${{ secrets.CIPIPELINE_NEXUS_USERNAME }}:${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}@${{vars.NEXUS_SERVER_ENDPOINT_LOCAL}}/repository/${{ env.NEXUS_PULL_REPOS_PY }}/simple" >> pip.conf
      #     echo "extra-index-url = {{vars.NEXUS_PROTOCOL_LOCAL}}://pypi.org/simple" >> pip.conf
      #     sudo cp pip.conf /etc/pip.conf
      #   shell: bash

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade --force-reinstall packer-framework==0.0.0 --extra-index-url={{vars.NEXUS_PROTOCOL_LOCAL}}://${{ secrets.CIPIPELINE_NEXUS_USERNAME }}:${{ secrets.CIPIPELINE_NEXUS_PASSWORD }}@${{vars.NEXUS_SERVER_ENDPOINT_LOCAL}}/repository/${{ env.NEXUS_PULL_REPOS_PY }}/simple
          find /usr/bin /usr/local/bin -name build_all_artifacts

      - name: Replicate given artifact
        # if: ${{ !startsWith(env.SOURCE_BRANCH,'rel-') && env.SOURCE_BRANCH != 'main' && inputs.workflowType == 'dry_run' }}
        run: |
          region_replication_wf -rd $RESOURCE_ID

      - uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: replicated-manifest-object
          path: replicated_manifest_obj.json
