---
name: Create PR for double merge
on:
  workflow_call:

jobs:

  create-pr-for-double-merge:
    if: github.event.pull_request.merged == true
    runs-on: non-build
    env:
      BASE_REF: "${{ github.event.pull_request.base.ref }}"
      CI-BRANCH: TDEVOPS-1832
      GITHUB_TOKEN: ${{ secrets.CIPIPELINE_GITHUB_TOKEN }}
      HEAD_REF: ${{ github.event.pull_request.head.ref }}
      OWNER: "${{ github.repository_owner }}"
      PR_TITLE: "${{ github.event.pull_request.title }}"
      REPO: "${{ github.repository }}"
      SHA: "${{github.sha}}"
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          token: ${{secrets.CIPIPELINE_GITHUB_TOKEN}}

      - name: Setup CI Scripts
        run: |
          cd ~/convoy-ci
          git checkout ${{env.CI-BRANCH}}
          git pull
          cd ~-
          cp -r ~/convoy-ci/.github/ci-scripts ./ci-scripts

      - name: Get all the release branches
        id: all_branches
        run: |
          branches+=("$(git branch -r | sed 's/^ *//g'| grep 'rel-')")
          declare -a br_arr=()
          for branch in $branches; do if [[ $branch == 'origin/rel-'* ]]; then br_arr+=($branch); fi ; done
          echo "BRANCHES=${br_arr[@]}" >> $GITHUB_ENV
          echo "MAILID=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_ENV

      - name: Pull Create
        id: create_dc
        env:
          BRANCHES: "${{ env.BRANCHES }}"
          MAIL_ID: "${{env.MAIL_ID}}"
        run: |
          node ./ci-scripts/javascript/createDoubleCommit.js

      - name: Slack Notification
        if: failure()
        uses: act10ns/slack@v2.0.0
        with:
           status: ${{ job.status }}
           steps: ${{ toJson(steps) }}
           channel: ${{ secrets.SLACK_DEVOPS_CHANNEL  }}
        
