---
name: Master CI Approve Workflows
on:
  workflow_call:

jobs:
  
  file-check:
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_file_check.yml@main
    secrets: inherit
  
  read-codeowners:
    needs: file-check
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_read_codeowners.yml@main
    secrets: inherit
    with:
      changed-files: ${{needs.file-check.outputs.changed-files}}

  post-message: 
    if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
    needs: read-codeowners
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_post_message.yml@main
    secrets: inherit
    with:
      required-teams: ${{needs.read-codeowners.outputs.required-teams}}

  check-update-branch: 
    needs: read-codeowners
    runs-on: non-build
    outputs:
      update-branch: ${{steps.check-commit.outputs.update-branch}}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Check head commit
        id: check-commit
        run: |
          REVIEW_STATE="${{github.event.review.state}}"
          if [[ ! -z "$REVIEW_STATE" ]]; then
            exit 0
          fi
          HEAD_COMMIT=${{github.event.pull_request.base.sha}}
          if [[ -z "${{github.event.before}}" ]]; then
            echo "First Push Commit"
            exit 0
          fi
          MERGE_COMMIT=$(git merge-base ${{github.event.before}} ${{github.event.pull_request.base.sha}})
          if [[ "$HEAD_COMMIT" == "$MERGE_COMMIT" ]]; then
            echo "Push Commit to the PR"
            echo "update-branch=false" >> $GITHUB_OUTPUT
          else
            echo "Update branch merge commit"
            echo "update-branch=true" >> $GITHUB_OUTPUT
          fi

  check-approval:
    needs: [check-update-branch,read-codeowners]
    if: ${{ github.event.review.state == 'approved' || needs.check-update-branch.outputs.update-branch == 'true' }}
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_check_approval.yml@main
    secrets: inherit
    with:
      required-teams: ${{needs.read-codeowners.outputs.required-teams}}
      
