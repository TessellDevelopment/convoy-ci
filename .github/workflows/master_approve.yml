---
name: Master CI Approve Workflows
on:
  workflow_call:

jobs:
  
  file-check:
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_file_check.yml@main
    secrets: inherit
  
  read-codeowners:
    needs: file-check
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_read_codeowners.yml@main
    secrets: inherit
    with:
      changed-files: ${{needs.file-check.outputs.changed-files}}

  post-message: 
    if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
    needs: read-codeowners
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_post_message.yml@main
    secrets: inherit
    with:
      required-teams: ${{needs.read-codeowners.outputs.required-teams}}

  check-update-branch: 
    needs: read-codeowners
    runs-on: non-build
    outputs:
      update-branch: ${{steps.check-commit.outputs.update-branch}}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Check head commit
        id: check-commit
        run: |
          REVIEW_STATE="${{github.event.review.state}}"
          if [[ ! -z "$REVIEW_STATE" ]]; then
            exit 0
          fi
          HEAD_COMMIT=${{github.event.pull_request.base.sha}}
          if [[ -z "${{github.event.before}}" ]]; then
            echo "First Push Commit"
            exit 0
          fi
          MERGE_COMMIT=$(git merge-base ${{github.event.before}} ${{github.event.pull_request.base.sha}})
          if [[ "$HEAD_COMMIT" == "$MERGE_COMMIT" ]]; then
            echo "Push Commit to the PR"
            echo "update-branch=false" >> $GITHUB_OUTPUT
          else
            echo "Update branch merge commit"
            echo "update-branch=true" >> $GITHUB_OUTPUT
          fi

  check-approval:
    needs: [check-update-branch,read-codeowners]
    if: ${{ github.event.review.state == 'approved' || github.event.review.state == 'commented' || github.event.review.state == 'changes_requested' || needs.check-update-branch.outputs.update-branch == 'true' }}
    uses: TessellDevelopment/convoy-ci/.github/workflows/master_check_approval.yml@main
    secrets: inherit
    with:
      required-teams: ${{needs.read-codeowners.outputs.required-teams}}

  rerun-approval:
    needs: [check-approval]
    if: ${{ github.event.review.state == 'approved' }}
    runs-on: non-build
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          token: ${{secrets.CIPIPELINE_GITHUB_TOKEN}}
      
      - name: Fetch and Rerun Failed workflow
        run: |
          WORKFLOW_ID=$(gh run list --branch "${{github.event.pull_request.head.ref}}" --status 'failure' --event 'pull_request' --workflow 'Master CI Approve Workflow' --limit 1 --json 'databaseId' | jq '.[0].databaseId')
          echo $WORKFLOW_ID
          if [[ ! -z "$WORKFLOW_ID" ]]; then
            echo "Rerunning Failed Approval Workflow"
            gh run rerun $WORKFLOW_ID --failed
          fi

  auto-merge:
    needs: check-approval
    if: (contains(github.event.pull_request.head.ref, 'double_commit')) && (github.event.pull_request.user.login == 'cipipelinetessell' )
    runs-on: non-build
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          token: ${{secrets.CIPIPELINE_GITHUB_TOKEN}}

      - name: Enable Auto merge
        run: |
          gh pr merge -R "${{github.repository}}" --squash --auto "${{ github.event.pull_request.number }}"

      - name: Slack Notification
        uses: act10ns/slack@v2.0.0
        with:
            status: ${{ job.status }}
            steps: ${{ toJson(steps) }}
            channel: ${{ secrets.SLACK_DEVOPS_CHANNEL  }}
        if: failure()
