---
name: Tessell Pipelines Code Build Pre Merge
on:
  workflow_call:
    inputs:
      type:
        description: 'This is used to determine build type'
        required: true
        type: string

jobs:

  build-amd:
    if: ${{inputs.type != 'arm' }}
    runs-on: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build and Push
        run: |
          docker() {
            IMAGE_NAME="$1"
            FILE="$4"
            if [[ "$FILE" == "null" ]]; then
              FILE="./Dockerfile"
            fi
            sudo ./mvnw install -Dnative -DskipTests -Dquarkus.native.container-build=true
            docker build -f $FILE -t $IMAGE_NAME .
          }
          build() {
            type="$1"
            check=$(grep "$type" convoy.yaml)
            if [[ -z "$check" ]]; then
              return
            fi
            while IFS=$'\t' read -r name buildFunction ext version file _; do
              echo "$name"
              echo "$buildFunction"
              echo "$ext"
              echo "$version"
              echo "$file"
              $buildFunction "$name" "$ext" "$version" "$file"
            done < <(yq e ".generates.$type[] | [.name, .buildFunction, .extension, .version, .dockerFile] | @tsv" convoy.yaml)
          }
          set +e
          build "artifacts"
          build "dockerImages"
          build "helmCharts"
  
  build-arm:
    if: ${{inputs.type == 'arm' }}
    runs-on: ARM64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        shell: bash
        run: |
          mvnw() {
            sudo ./mvnw install -Dnative -DskipTests -Dquarkus.native.container-build=true
          }
          docker() {
            IMAGE_NAME="$1"
            FILE="$4"
            sudo ./mvnw install -Dnative -DskipTests -Dquarkus.native.container-build=true
            docker build -f $FILE -t $IMAGE_NAME .
          }
          build() {
            type="$1"
            check=$(grep "$type" convoy.yaml)
            if [[ -z "$check" ]]; then
              return
            fi
            while IFS=$'\t' read -r name buildFunction ext version file _; do
              echo "$name"
              echo "$buildFunction"
              echo "$ext"
              echo "$version"
              echo "$file"
              $buildFunction "$name" "$ext" "$version" "$file"
            done < <(/usr/local/bin/yq e ".generates.$type[] | [.name, .buildFunction, .extension, .version, .dockerFile] | @tsv" convoy.yaml)
          }
          set +e
          build "artifacts"
          build "dockerImages"

      - name: Remove target
        if: always()
        run: |
          sudo rm -rf target
          