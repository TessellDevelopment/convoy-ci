---
name: Create tag on release branch
on:
  workflow_call:
    inputs:
      label:
        description: 'Release label'
        required: true
        type: string
    outputs:
      tag:
        description: "New tag created post merge"
        value: ${{ jobs.create-tag-on-merge.outputs.tag_ref_output }}
      uses_custom_version:
        description: "Key for using tag as version"
        value: ${{ jobs.create-tag-on-merge.outputs.uses_custom_version }}

jobs:

  create-tag-on-merge:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: non-build
    env:
      BASE_REF: "${{ github.event.pull_request.base.ref }}"
      CI-BRANCH: TDEVOPS-1832
      CONVOY_API_ENDPOINT: ${{vars.CONVOY_DEV_API_ENDPOINT}}
      CONVOY_AUTH_TOKEN: ${{secrets.CONVOY_AUTH_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.CIPIPELINE_GITHUB_TOKEN  }}
      LABEL: ${{inputs.label}}
      MERGE_COMMIT_SHA: "${{ github.event.pull_request.merge_commit_sha }}"
      OWNER: "${{ github.repository_owner }}"
      REPO: "${{ github.repository }}"
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL  }}
    outputs:
      tag_ref_output: ${{ steps.tag_output.outputs.tag_ref }}
      uses_custom_version: ${{ steps.tag_output.outputs.uses_custom_version }}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      
      - name: Setup CI Scripts
        run: |
          cd ~/convoy-ci
          git checkout ${{env.CI-BRANCH}}
          git pull
          cd ~-
          cp -r ~/convoy-ci/.github/ci-scripts ./ci-scripts

      - name: Find latest tag
        id: latest_tag
        run: |
          latest_tags+=("$(git tag --contains '${{ github.event.pull_request.base.sha }}')")
          for tag in $latest_tags; do tag_arr+=($tag); done
          echo "TAGS=${tag_arr[@]}" >> $GITHUB_ENV

      - name: Check if tag exists
        run: |
          current_tag="$(git tag --contains ${{ github.event.pull_request.merge_commit_sha }})"
          if [[ ! -z "$current_tag" ]]; then
            echo "Tag already exists for commit ${{ github.event.pull_request.merge_commit_sha }}: $current_tag"
            echo "CURRENT_TAG=$current_tag" >> $GITHUB_ENV
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create tag and update ref
        env:
          CURRENT_TAG: "${{env.CURRENT_TAG}}"
          TAG_EXISTS: "${{env.TAG_EXISTS}}"
          TAGS: "${{env.TAGS}}"
        id: create_tag
        run: |
          node ./ci-scripts/javascript/createTag.js
            
      - name: Tag Output
        id: tag_output
        run: |
          echo "tag_ref=${{steps.create_tag.outputs.tag_ref}}" >> $GITHUB_OUTPUT
          echo "uses_custom_version=${{steps.create_tag.outputs.uses_custom_version}}" >> $GITHUB_OUTPUT

      - name: Validate Tag and Release Label
        env:
          TAG: ${{steps.create_tag.outputs.tag_ref}}
        run: |
          bash ./ci-scripts/bash/validate_label.sh

      - name: Slack Notification
        if: failure()
        uses: act10ns/slack@v2.0.0
        with:
           status: ${{ job.status }}
           steps: ${{ toJson(steps) }}
           channel: ${{ secrets.SLACK_DEVOPS_CHANNEL  }}
