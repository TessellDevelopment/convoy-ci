---
name: Tessell Build & Publish Pipeline
on:
  workflow_dispatch:
    inputs:
      organisation:
        description: Organisation name
        required: true
        default: "TessellDevelopment"
      branch_name:
        description: Branch to build
        required: true
        default: "main"
#  schedule:
#    - cron:  '0 0 * * *'

jobs:
  find_repos_to_build:
    runs-on: self-hosted
    name: Find the repositories to build
    outputs:
      job_to_monitor: ${{ steps.job_to_monitor.outputs.job_to_monitor }}
      organisation: ${{ steps.repos_dispatched.outputs.organisation }}
      all_repos: ${{ steps.all_repos.outputs.all_repos }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Get repos to build
        id: all_repos
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.PIPELINES_REPO_TOKEN  }}
          script: |
            const { promises: fs } = require('fs')
            const path = './build-order.json'
            let content = await fs.readFile(path, 'utf8')
            let all_repos = JSON.parse(content).git_repos
            core.setOutput('all_repos', all_repos)

  build_and_publish:
    runs-on: self-hosted
    env:
      DEFAULT_ORGANISATION: TessellDevelopment
      DEFAULT_BRANCH: TDEVOPS-2939_gcp_tf_chnages_testing

    name: Build Repository
    needs: find_repos_to_build
    strategy:
      matrix:
        repo_name: ${{fromJson(needs.find_repos_to_build.outputs.all_repos)}}
      max-parallel: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Build repository
        id: repos_dispatched
        uses: ./github-actions/dispatch-build-and-wait
        with:
          github-token: ${{ secrets.PIPELINES_REPO_TOKEN  }}
          organisation: "${{ github.event.inputs.organisation || env.DEFAULT_ORGANISATION }}"
          repo_name: "${{ matrix.repo_name }}"
          branch_name: "${{ github.event.inputs.branch_name || env.DEFAULT_BRANCH }}"
