#!/bin/bash

source ./ci-scripts/bash/common


function upload_to_nexus() {
  local local_abs_path_to_src=${1:-} upload_path_in_nexus=${2:-}
  validate_inputs "1 2" "$@"

  curl -v -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} \
    --upload-file ${local_abs_path_to_src} -w "%{http_code}" \
    ${NEXUS_ADDR}/repository/${upload_path_in_nexus}
}

function upload_to_nexus_tessell_artifacts() {
  local local_abs_path_to_src=${1:-} dest_path_without_bucket=${2:-}
  validate_inputs "1 2" "$@"

  local response_with_status_code=$(upload_to_nexus ${local_abs_path_to_src} "tessell-artifacts/${dest_path_without_bucket}")
  echo ${response_with_status_code}

  local status_code=$(echo "${response_with_status_code}" | tail -n1)
  validate_reponse_code "${status_code}" "201"
}


function upload_artifact() {
  local local_abs_path_to_src=${1:-} dest_path_without_bucket=${2:-} push_to=${3:-s3}
  validate_inputs "1 2" "$@"

  upload_to_nexus_tessell_artifacts ${local_abs_path_to_src} ${dest_path_without_bucket}

  local dest_path_prefix deployment_stage
  if [[ ${push_to} == convoy-minio ]]; then
    alias cp_cmd='mc cp'
    dest_path_prefix=${MC_ALIAS_FOR_CONVOY_MINIO}/
  else
    alias cp_cmd='aws s3 cp'
    dest_path_prefix=s3://
  fi
  set -x
  bash --version
  type cp_cmd
  for deployment_stage in dev qa stage prod; do
    cp_cmd ${local_abs_path_to_src} ${dest_path_prefix}tessell-srtifacts-${deployment_stage}/${dest_path_without_bucket}
  done
}


function upload_artifacts_using_src_dest_map() {
  local map=${1:-} artifacts local_abs_path_to_src dest_path_without_bucket push_to
  [[ -n ${map:-} ]] || die "This function must invoked with a path to the src-dest-map file as its one-and-only argument. Currently, no argument has been passed."

  $(yq 'has("artifacts") and .artifacts | type == "!!seq"' ${map}) || \
    die "The src-dest-map must be a yaml file consisting only one top level key 'artifacts' of type list."

  [[ $(yq '[.artifacts[] | select((has("local_abs_path_to_src") and has("dest_path_without_bucket")) | not)] | length') -eq 0 ]] || \
    die <(cat <<-EOF
			All src-dest-map entries in the file must have both of the keys: 'local_abs_path_to_src' and 'dest_path_without_bucket'.
			One or more entries in the current file is missing at least one of the required keys.
			EOF
    )

  readarray artifacts < <(yq -o=j -I=0 '.artifacts[]' ${map})

  for artifact in "${artifacts[@]}"; do
    [[ -f $(echo ${artifact} | yq '.local_abs_path_to_src') ]] || \
      die "One or more local paths provided with 'local_abs_path_to_src' does not exist in the local file system."
  done

  for artifact in "${artifacts[@]}"; do
    local_abs_path_to_src=$(echo ${artifact} | yq '.local_abs_path_to_src')
    dest_path_without_bucket=$(echo ${artifact} | yq '.dest_path_without_bucket')
    push_to=$(echo ${artifact} | yq '.push_to')

    upload_artifact ${local_abs_path_to_src} ${dest_path_without_bucket} ${push_to}
  done
}
